# -----------------------------------------------
# Locale
# -----------------------------------------------
export LANG=en_US.UTF-8

# ---------------------------------------------------------------------------------------------------------------------
# Manual 
# ---------------------------------------------------------------------------------------------------------------------
export MANPATH="/usr/local/man:$MANPATH"


# ---------------------------------------------------------------------------------------------------------------------
# local bin directories 
# ---------------------------------------------------------------------------------------------------------------------
export PATH="{{- .chezmoi.homeDir -}}/Bin:$PATH"
export PATH="{{- .chezmoi.homeDir -}}/.bin:$PATH"
export PATH="{{- .chezmoi.homeDir -}}/.local/bin:$PATH"
export PATH="{{- .chezmoi.homeDir -}}/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/bin:$PATH"


# ---------------------------------------------------------------------------------------------------------------------
# Default Python
# ---------------------------------------------------------------------------------------------------------------------
export PATH="/Library/Frameworks/Python.framework/Versions/3.9/bin:${PATH}"


# ---------------------------------------------------------------------------------------------------------------------
# AWS 
# ---------------------------------------------------------------------------------------------------------------------
export AWS_SDK_LOAD_CONFIG=1
export AWS_CONFIG_FILE={{- .chezmoi.homeDir -}}/.aws/config
export AWS_SHARED_CREDENTIALS_FILE={{- .chezmoi.homeDir -}}/.aws/credentials


# declare the AWS_PROFILE var
export AWS_PROFILE

okta() {
    # Argument is the okta profile name, defined in ~/.okta-aws (e.g. tooling)
    if [ ! -f {{- .chezmoi.homeDir -}}/.okta-aws ];then
      echo "Missing {{- .chezmoi.homeDir -}}/.okta-aws, please set it up."
      return 1
    elif [ -z "$1" ]; then
      echo "Missing profile argument, please provide one of the following:"
      cat "{{- .chezmoi.homeDir -}}/.okta-aws" | sed -n 's/^\[/  * /p' | tr -d '\]' | sort
      return 1
    else
        unset AWS_PROFILE
        okta-awscli -f --okta-profile "${1}" --profile "${1}"
        export AWS_PROFILE=$1
        echo "AWS_PROFILE set to \"$1\"."
    fi
}


# ---------------------------------------------------------------------------------------------------------------------
# Brew config
# ---------------------------------------------------------------------------------------------------------------------
export HOMEBREW_AUTO_UPDATE_SECS="86400"


# ---------------------------------------------------------------------------------------------------------------------
# Brew's curl
# ---------------------------------------------------------------------------------------------------------------------
export PATH="$(brew --prefix)/opt/curl/bin:$PATH"


{{- if eq .enable.tool.bat true -}}
# ---------------------------------------------------------------------------------------------------------------------
# bat: https://github.com/sharkdp/bat
# ---------------------------------------------------------------------------------------------------------------------
# cause FU AWS putting output in less
export PAGER=cat
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
alias cat="bat --theme=\$(defaults read -globalDomain AppleInterfaceStyle &> /dev/null && echo default || echo GitHub)"
alias -g -- -h='-h 2>&1 | bat --language=help --style=plain'
alias -g -- --help='--help 2>&1 | bat --language=help --style=plain'
{{- end -}}


# ---------------------------------------------------------------------------------------------------------------------
# gnubin: https://gist.github.com/skyzyx/3438280b18e4f7c490db8a2a2ca0b9da
# ---------------------------------------------------------------------------------------------------------------------
BREW_BIN="/usr/local/bin/brew"
if [ -f "/opt/homebrew/bin/brew" ]; then
    BREW_BIN="/opt/homebrew/bin/brew"
fi

if type "${BREW_BIN}" &> /dev/null; then
    export BREW_PREFIX="$("${BREW_BIN}" --prefix)"
    for bindir in "${BREW_PREFIX}/opt/"*"/libexec/gnubin"; do export PATH=$bindir:$PATH; done
    for bindir in "${BREW_PREFIX}/opt/"*"/bin"; do export PATH=$bindir:$PATH; done
    for mandir in "${BREW_PREFIX}/opt/"*"/libexec/gnuman"; do export MANPATH=$mandir:$MANPATH; done
    for mandir in "${BREW_PREFIX}/opt/"*"/share/man/man1"; do export MANPATH=$mandir:$MANPATH; done
fi

# Old version:
# export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
# export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
# export PATH="/usr/local/opt/binutils/bin:$PATH"


{{- if eq .enable.tool.vscode true -}}
# ---------------------------------------------------------------------------------------------------------------------
# VS Code
# ---------------------------------------------------------------------------------------------------------------------
export PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$PATH"
{{- end -}}


{{- if eq .enable.tool.nix true -}}
# ---------------------------------------------------------------------------------------------------------------------
# Nix
# ---------------------------------------------------------------------------------------------------------------------
export PATH="$PATH:/nix/var/nix/profiles/default/bin"
{{- end -}}


# ---------------------------------------------------------------------------------------------------------------------
# Poetry
# ---------------------------------------------------------------------------------------------------------------------
export PATH="{{- .chezmoi.homeDir -}}/.poetry/bin:$PATH"
export PATH="{{- .chezmoi.homeDir -}}/.local/bin:$PATH"


# ---------------------------------------------------------------------------------------------------------------------
# pyenv
# ---------------------------------------------------------------------------------------------------------------------
export PYENV_ROOT="{{- .chezmoi.homeDir -}}/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
	eval "$(pyenv init -)"
	eval "$(pyenv virtualenv-init -)"
fi


# ---------------------------------------------------------------------------------------------------------------------
# nvm
# ---------------------------------------------------------------------------------------------------------------------
# export NVM_DIR="{{- .chezmoi.homeDir -}}/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


# ---------------------------------------------------------------------------------------------------------------------
# npm
# ---------------------------------------------------------------------------------------------------------------------
export PATH="{{- .chezmoi.homeDir -}}/.npm-global/bin:$PATH"


# ---------------------------------------------------------------------------------------------------------------------
# pnpm
# ---------------------------------------------------------------------------------------------------------------------
export PNPM_HOME="{{- .chezmoi.homeDir -}}/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac


# ---------------------------------------------------------------------------------------------------------------------
# Yarn
# ---------------------------------------------------------------------------------------------------------------------
export PATH="{{- .chezmoi.homeDir -}}/.yarn/bin:$PATH"
export PATH="{{- .chezmoi.homeDir -}}/.config/yarn/global/node_modules/.bin:$PATH"


{{- if eq .enable.lang.golang true -}}
# ---------------------------------------------------------------------------------------------------------------------
# golang
# ---------------------------------------------------------------------------------------------------------------------
export GOPATH="{{- .chezmoi.homeDir -}}/go" 
export PATH="$PATH:$GOPATH/bin"
{{- end -}}


{{- if eq .enable.lang.rust true -}}
# ---------------------------------------------------------------------------------------------------------------------
# Cargo the rust tool
# ---------------------------------------------------------------------------------------------------------------------
export CARGO_HOME="{{- .chezmoi.homeDir -}}/.cargo"
export PATH="$CARGO_HOME/bin:$PATH"
[[ -s "$CARGO_HOME" ]] && source "{{- .chezmoi.homeDir -}}/.cargo/env"
{{- end -}}


{{- if eq .enable.tool.broot true -}}
# ---------------------------------------------------------------------------------------------------------------------
# broot: https://github.com/Canop/broot
# ---------------------------------------------------------------------------------------------------------------------
source {{- .chezmoi.homeDir -}}/.config/broot/launcher/bash/br
{{- end -}}


# ---------------------------------------------------------------------------------------------------------------------
# fzf: https://github.com/junegunn/fzf
# ---------------------------------------------------------------------------------------------------------------------
# source <(fzf --zsh)
# [ -f ~/.fzf.zsh ] && source {{- .chezmoi.homeDir -}}/.fzf.zsh
# autoload -U +X bashcompinit && bashcompinit
# complete -o nospace -C /usr/local/bin/bit bit
# fzf --preview "bat --color=always --style=numbers --line-range=:500 {}"


{{- if eq .enable.tool.dasel true -}}
# ---------------------------------------------------------------------------------------------------------------------
# dasel: https://github.com/TomWright/dasel
# ---------------------------------------------------------------------------------------------------------------------
export fpath=({{- .chezmoi.homeDir -}}/zsh/site-functions $fpath)
mkdir -p "{{- .chezmoi.homeDir -}}/zsh/site-functions"
dasel completion zsh > "{{- .chezmoi.homeDir -}}/zsh/site-functions/_dasel"
{{- end -}}


# ---------------------------------------------------------------------------------------------------------------------
# fnm: https://github.com/Schniz/fnm replacement for nvm
# ---------------------------------------------------------------------------------------------------------------------
eval "$(fnm env --use-on-cd)"


{{-if eq .tools.prompt "starship" -}}
# ---------------------------------------------------------------------------------------------------------------------
# Starship: https://starship.rs/
# ---------------------------------------------------------------------------------------------------------------------
if [ -f "{{- .chezmoi.homeDir -}}/.config/starship/starship.toml" ]; then
    export STARSHIP_CONFIG="{{- .chezmoi.homeDir -}}/.config/starship/starship.toml"
fi
eval "$(starship init zsh)"
{{- end -}}


# ---------------------------------------------------------------------------------------------------------------------
# TheFuck
# ---------------------------------------------------------------------------------------------------------------------
eval "$(thefuck --alias)"


# ---------------------------------------------------------------------------------------------------------------------
# zoxide: https://github.com/ajeetdsouza/zoxide
# ---------------------------------------------------------------------------------------------------------------------
eval "$(zoxide init --cmd cd zsh)"


{{- if eq .enable.tool.jenv true -}}
# ---------------------------------------------------------------------------------------------------------------------
# Jenv: https://github.com/jenv/jenv
# ---------------------------------------------------------------------------------------------------------------------
export PATH="{{- .chezmoi.homeDir -}}/.jenv/bin:$PATH"
eval "$(jenv init -)"
jenv enable-plugin export
{{- end -}}


# ---------------------------------------------------------------------------------------------------------------------
# rvm: Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
# ---------------------------------------------------------------------------------------------------------------------
export PATH="/usr/local/opt/ruby/bin:$PATH"
export RVM_HOME="{{- .chezmoi.homeDir -}}/.rvm"
export PATH="$RVM_HOME/scripts/rvm:$PATH"
# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$RVM_HOME/bin"
[[ -s "$RVM_HOME/scripts/rvm" ]] && source "$RVM_HOME/scripts/rvm" # Load RVM into a shell session *as a function*


# ---------------------------------------------------------------------------------------------------------------------
# aliases
# ---------------------------------------------------------------------------------------------------------------------
alias hal="ls -hal"
alias le='eza --icons -F -H --group-directories-first --git -1'
{{- if eq .enable.tool.lsd true -}}
alias ls="lsd"
{{- end -}}
alias la="ls -A"
alias ld="ls -d */"
alias ll="ls -alF"
alias ls="ls --color"
alias lt="eza --tree --level=2 . --icons"

alias dc="docker compose"
alias docker-list-containers="docker ps -a"
alias docker-remove-containers="docker rm $(docker ps -a -q)"
alias docker-remove-iamges="docker rmi $(docker images -q)"

# fucked ok, don't question me! node is SHITE
alias npm="npq-hero"
alias yarn="NPQ_PKG_MGR=yarn npq-hero"